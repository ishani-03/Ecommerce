{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nodejs\\\\ecomm\\\\src\\\\components\\\\Sign-in\\\\SignIn.js\";\nimport React from 'react';\nimport FormInput from '../Form-input/FormInput';\nimport CustomButton from '../Custom-button/CustomButton';\nimport './SignIn.scss'; // import {auth,signInWithGoogle} from '../../firebase/Firebase'\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/UserAction';\nimport { connect } from 'react-redux';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      const {\n        emailSignInStart\n      } = this.props;\n      emailSignInStart(emai, password); // try{\n      //     await auth.signInWithEmailAndPassword(email,password);\n      //     this.setState({email:'',password:''})\n      // }\n      // catch(error){\n      //     console.log(error)\n      // }\n      // this.setState({emial:'', password:''})\n      //** No more setState. Redux will handle the state from here on out with sagas */\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      required: true,\n      handleChange: this.handleChange,\n      label: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      required: true,\n      handleChange: this.handleChange,\n      label: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, \" Sign-In\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, \"Google Sign-In\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Nodejs/ecomm/src/components/Sign-in/SignIn.js"],"names":["React","FormInput","CustomButton","googleSignInStart","emailSignInStart","connect","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","emai","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport FormInput from '../Form-input/FormInput'\nimport CustomButton from '../Custom-button/CustomButton'\nimport './SignIn.scss'\n// import {auth,signInWithGoogle} from '../../firebase/Firebase'\nimport { googleSignInStart , emailSignInStart } from '../../redux/user/UserAction'\nimport {connect } from 'react-redux'\n\n\n\nclass SignIn extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            email:'',\n            password:''\n        }\n    }\n\n    handleSubmit=async event=>{\n        event.preventDefault();\n        const {email,password}=this.state;\n        const {emailSignInStart} = this.props\n        \n        emailSignInStart(emai , password)\n        // try{\n        //     await auth.signInWithEmailAndPassword(email,password);\n        //     this.setState({email:'',password:''})\n        // }\n        // catch(error){\n        //     console.log(error)\n        // }\n        // this.setState({emial:'', password:''})\n        //** No more setState. Redux will handle the state from here on out with sagas */\n\n    }\n\n\n    handleChange=(event)=>{\n        const{value,name}=event.target;\n        this.setState({[name]:value})\n    }\n\n    render(){\n        const {googleSignInStart} = this.props\n        return(\n            <div className='sign-in'>\n                <h2>I already have an account</h2>\n                <span>Sign in with your email and password</span>\n\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput name=\"email\" type=\"email\" value={this.state.email} required\n                    handleChange={this.handleChange} label='email'></FormInput>\n                    <FormInput name=\"password\" type=\"password\" value={this.state.password} required\n                    handleChange={this.handleChange} label='password'></FormInput>\n                    <div className='buttons'>\n                    <CustomButton type='submit'> Sign-In</CustomButton>\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>Google Sign-In</CustomButton>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = dispatch =>({\n    googleSignInStart : () => dispatch(googleSignInStart()),\n    emailSignInStart : (email,password) => dispatch(emailSignInStart({email, password}))\n})\n\nexport default connect (null,mapDispatchToProps)(SignIn)\n"]},"metadata":{},"sourceType":"module"}