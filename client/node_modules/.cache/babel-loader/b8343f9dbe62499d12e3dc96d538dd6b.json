{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nodejs\\\\ecomm\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.scss';\nimport Homepage from './pages/Homepage/Homepage';\nimport Shop from './pages/shop/Shop';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport SignUpSignIn from './pages/SignUp-SignIn/SignUpSignIn'; //  import {auth , createUserProfileDocument , **addCollectionAndDocuments} from './firebase/Firebase'\n// import {auth , createUserProfileDocument} from './firebase/Firebase'\n\nimport { connect } from 'react-redux'; // import {setCurrentUser} from './redux/user/UserAction'\n\nimport { selectCurrentUser } from '../src/redux/user/UserSelector';\nimport { createStructuredSelector } from 'reselect';\nimport Checkout from '../src/pages/checkout/Checkout'; //  ** import {selectColletionsForPreview} from './redux/shop/ShopSelector'\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {// const {setCurrentUser, **collectionsArray}=this.props;\n    // const {setCurrentUser}=this.props;\n    // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n    //   if(userAuth){\n    //     const userRef = await createUserProfileDocument(userAuth);\n    //     //ref. in lecture 91\n    //     userRef.onSnapshot(snapShot=>{\n    //       setCurrentUser ({\n    //           id: snapShot.id,\n    //           ...snapShot.data()\n    //         })\n    //       })\n    //       // console.log(snapShot.data()) \n    //   }\n    //   setCurrentUser(userAuth) ;\n    // ** addCollectionAndDocuments('collections', collectionsArray.map(({title, items})=> ({title, items})) )\n    // });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Homepage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: Shop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: Checkout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      }) : /*#__PURE__*/React.createElement(SignUpSignIn, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser // ** collectionsArray : selectColletionsForPreview \n  // ** - We did all of this so we don't have to manually enter each collection and item into firebase\n\n}); // const mapStateToProps = ({ user , collections }) => ({\n//   currentUser: user.currentUser,\n//   collectionsArray : collections.collectionsArray\n// });\n// const mapDispatchToProps= dispatch=>({\n//   setCurrentUser:user =>dispatch(setCurrentUser(user))\n// }) //** We removed this mapDispatchToProps as noe sagas is handling setting our current user on success */\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Nodejs/ecomm/src/App.js"],"names":["React","Homepage","Shop","Route","Switch","Redirect","Header","SignUpSignIn","connect","selectCurrentUser","createStructuredSelector","Checkout","App","Component","unsubscribeFromAuth","componentDidMount","componentWillUnmount","render","props","currentUser","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAAQC,KAAR,EAAcC,MAAd,EAAqBC,QAArB,QAAoC,kBAApC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,YAAP,MAAyB,oCAAzB,C,CACA;AACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CACA;;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,QAAP,MAAqB,gCAArB,C,CACA;;AAEA,MAAMC,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAGhCC,mBAHgC,GAGZ,IAHY;AAAA;;AAKhCC,EAAAA,iBAAiB,GAAG,CAElB;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACF;AACD;;AAEDC,EAAAA,oBAAoB,GAAE;AACpB,SAAKF,mBAAL;AACD;;AAEDG,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEhB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAES,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,eAIA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AAA4B,MAAA,MAAM,EAAE,MAAI,KAAKO,KAAL,CAAWC,WAAX,gBAClC,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADkC,gBAElC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,CAFF,CADF;AAcD;;AAjD+B;;AAqDlC,MAAMC,eAAe,GAACV,wBAAwB,CAAE;AAC9CS,EAAAA,WAAW,EAAEV,iBADiC,CAE9C;AACA;;AAH8C,CAAF,CAA9C,C,CAMA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,eAAeD,OAAO,CAACY,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CT,GAA5C,CAAf","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport Homepage from './pages/Homepage/Homepage'\nimport Shop from './pages/shop/Shop'\nimport {Route,Switch,Redirect} from 'react-router-dom'\nimport Header from './components/Header/Header'\nimport SignUpSignIn from './pages/SignUp-SignIn/SignUpSignIn'\n//  import {auth , createUserProfileDocument , **addCollectionAndDocuments} from './firebase/Firebase'\n// import {auth , createUserProfileDocument} from './firebase/Firebase'\nimport {connect} from 'react-redux'\n// import {setCurrentUser} from './redux/user/UserAction'\nimport { selectCurrentUser } from '../src/redux/user/UserSelector'\nimport { createStructuredSelector } from 'reselect'\nimport Checkout from '../src/pages/checkout/Checkout'\n//  ** import {selectColletionsForPreview} from './redux/shop/ShopSelector'\n\nclass App extends React.Component {\n  \n\n  unsubscribeFromAuth=null;\n\n  componentDidMount() {\n\n    // const {setCurrentUser, **collectionsArray}=this.props;\n    // const {setCurrentUser}=this.props;\n\n    // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n    //   if(userAuth){\n    //     const userRef = await createUserProfileDocument(userAuth);\n\n\n\n    //     //ref. in lecture 91\n    //     userRef.onSnapshot(snapShot=>{\n    //       setCurrentUser ({\n    //           id: snapShot.id,\n    //           ...snapShot.data()\n    //         })\n    //       })\n    //       // console.log(snapShot.data()) \n    //   }\n    //   setCurrentUser(userAuth) ;\n      // ** addCollectionAndDocuments('collections', collectionsArray.map(({title, items})=> ({title, items})) )\n    // });\n  }\n\n  componentWillUnmount(){\n    this.unsubscribeFromAuth();\n  }\n\n  render(){\n    return (\n      <div>\n        <Header/>\n        <Switch>\n        <Route exact path='/' component={Homepage} />\n        <Route path='/shop' component={Shop} />\n        <Route exact path='/checkout' component={Checkout} />\n        <Route exact path='/signin' render={()=>this.props.currentUser\n           ? (<Redirect to='/' />) \n           :( <SignUpSignIn/>)} />\n        </Switch>\n        \n      </div>\n    );\n  }\n  \n}\n\nconst mapStateToProps=createStructuredSelector ({\n  currentUser: selectCurrentUser ,\n  // ** collectionsArray : selectColletionsForPreview \n  // ** - We did all of this so we don't have to manually enter each collection and item into firebase\n})\n\n// const mapStateToProps = ({ user , collections }) => ({\n//   currentUser: user.currentUser,\n//   collectionsArray : collections.collectionsArray\n// });\n\n// const mapDispatchToProps= dispatch=>({\n//   setCurrentUser:user =>dispatch(setCurrentUser(user))\n// }) //** We removed this mapDispatchToProps as noe sagas is handling setting our current user on success */\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}