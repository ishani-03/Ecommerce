{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nodejs\\\\ecomm\\\\src\\\\pages\\\\shop\\\\Shop.js\";\nimport React from 'react';\nimport CollectionOverview from '../../components/collection-overview/CollectionOverview';\nimport { Route } from 'react-router-dom';\nimport Collection from '../collection/Collection';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/Firebase';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/ShopActions';\n\nclass Shop extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      // console.log(snapshot)\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      console.log(collectionsMap);\n      updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop=page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}/:collectionId`,\n      component: Collection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["C:/Nodejs/ecomm/src/pages/shop/Shop.js"],"names":["React","CollectionOverview","Route","Collection","firestore","convertCollectionsSnapshotToMap","connect","updateCollections","Shop","Component","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","console","log","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,yDAA/B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAAQC,SAAR,EAAoBC,+BAApB,QAA0D,yBAA1D;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;;AAGA,MAAMC,IAAN,SAAmBR,KAAK,CAACS,SAAzB,CAAoC;AAAA;AAAA;AAAA,SAEhCC,uBAFgC,GAER,IAFQ;AAAA;;AAIhCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAAEJ,MAAAA;AAAF,QAAwB,KAAKK,KAAnC;AACA,UAAMC,aAAa,GAAET,SAAS,CAACU,UAAV,CAAqB,aAArB,CAArB;AAEA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACtE;AACA,YAAMC,cAAc,GAAIZ,+BAA+B,CAACW,QAAD,CAAvD;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACAV,MAAAA,iBAAiB,CAACU,cAAD,CAAjB;AACH,KAL8B,CAA/B;AAMH;;AAEDG,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKT,KAArB;AACJ,wBACQ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAE,KAAF;AAAQ,MAAA,KAAK,MAAb;AAAc,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,EAAlC;AAAqC,MAAA,SAAS,EAAErB,kBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAE,KAAF;AAAQ,MAAA,KAAK,MAAb;AAAc,MAAA,IAAI,EAAG,GAAEoB,KAAK,CAACC,IAAK,gBAAlC;AAAmD,MAAA,SAAS,EAAEnB,UAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADR;AAOC;;AAzB+B;;AA4BpC,MAAMoB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjB,EAAAA,iBAAiB,EAAGU,cAAc,IAAIO,QAAQ,CAACjB,iBAAiB,CAACU,cAAD,CAAlB;AADV,CAAL,CAAnC;;AAIA,eAAeX,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCf,IAAlC,CAAf","sourcesContent":["import React from 'react'\nimport CollectionOverview from '../../components/collection-overview/CollectionOverview'\nimport { Route } from 'react-router-dom'\nimport Collection from '../collection/Collection'\nimport {firestore , convertCollectionsSnapshotToMap} from '../../firebase/Firebase'\nimport { connect } from 'react-redux'\nimport { updateCollections } from '../../redux/shop/ShopActions'\n\n\nclass Shop extends React.Component  {\n\n    unsubscribeFromSnapshot=null;\n\n    componentDidMount(){\n        const { updateCollections } = this.props\n        const collectionRef= firestore.collection('collections');\n\n        this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n            // console.log(snapshot)\n            const collectionsMap =  convertCollectionsSnapshotToMap(snapshot)\n            console.log(collectionsMap)\n            updateCollections(collectionsMap)\n        })\n    }\n\n    render(){\n        const {match} = this.props;\n    return(\n            <div className='shop=page'>\n                < Route exact path={`${match.path}`} component={CollectionOverview} />\n                < Route exact path={`${match.path}/:collectionId`} component={Collection} />\n            </div>\n        )\n        \n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    updateCollections : collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null, mapDispatchToProps)(Shop)"]},"metadata":{},"sourceType":"module"}