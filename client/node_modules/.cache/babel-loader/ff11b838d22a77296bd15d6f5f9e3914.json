{"ast":null,"code":"import UserActionTypes from './UserTypes';\nexport const setCurrentUser = user => ({\n  type: UserActionTypes.SET_CURRENT_USER,\n  payload: user\n});\nexport const googleSignInStart = () => ({\n  type: UserActionTypes.GOOGLE_SIGN_IN_START\n}); // export const googleSignInSuccess = (user) => ({\n//     type: UserActionTypes.GOOGLE_SIGN_IN_SUCCESS,\n//     payload : user\n// }) \n// export const googleSignInFailure = (error) =>({\n//     type: UserActionTypes.GOOGLE_SIGN_IN_FAILURE,\n//     payload: error\n// })\n\nexport const emailSignInStart = emailAndPassword => ({\n  type: UserActionTypes.EMAIL_SIGN_IN_START,\n  payload: emailAndPassword\n}); // export const emailSignInSuccess = (user) => ({\n//     type: UserActionTypes.EMAIL_SIGN_IN_SUCCESS,\n//     payload : user\n// })\n// export const emailSignInFailure = (error) =>({\n//     type: UserActionTypes.EMAIL_SIGN_IN_FAILURE,\n//     payload: error\n// })\n\nexport const signInSuccess = user => ({\n  type: UserActionTypes.SIGN_IN_SUCCESS,\n  payload: user\n});\nexport const signInFailure = error => ({\n  type: UserActionTypes.SIGN_IN_FAILURE,\n  payload: error\n});\nexport const checkUserSession = () => ({\n  type: UserActionTypes.CHECK_USER_SESSION\n});\nexport const signOutStart = () => ({\n  type: UserActionTypes.SIGN_OUT_START\n});\nexport const signOutSuccess = () => ({\n  type: UserActionTypes.SIGN_OUT_SUCCESS\n});\nexport const signOutFailure = error => ({\n  type: UserActionTypes.SIGN_OUT_FAILURE,\n  payload: error\n});\nexport const signUpStart = userCredentials => ({\n  type: UserActionTypes.SIGN_UP_START,\n  payload: userCredentials\n});\nexport const signUpSuccess = ({\n  user,\n  additionalData\n}) => ({\n  type: UserActionTypes.SIGN_UP_SUCCESS,\n  payload: {\n    user,\n    additionalData\n  }\n});\nexport const signUpFailure = error => ({\n  type: UserActionTypes.SIGN_UP_FAILURE,\n  payload: error\n});","map":{"version":3,"sources":["C:/Nodejs/ecomm/src/redux/user/UserAction.js"],"names":["UserActionTypes","setCurrentUser","user","type","SET_CURRENT_USER","payload","googleSignInStart","GOOGLE_SIGN_IN_START","emailSignInStart","emailAndPassword","EMAIL_SIGN_IN_START","signInSuccess","SIGN_IN_SUCCESS","signInFailure","error","SIGN_IN_FAILURE","checkUserSession","CHECK_USER_SESSION","signOutStart","SIGN_OUT_START","signOutSuccess","SIGN_OUT_SUCCESS","signOutFailure","SIGN_OUT_FAILURE","signUpStart","userCredentials","SIGN_UP_START","signUpSuccess","additionalData","SIGN_UP_SUCCESS","signUpFailure","SIGN_UP_FAILURE"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,aAA5B;AAEA,OAAO,MAAMC,cAAc,GAAGC,IAAI,KAAG;AACjCC,EAAAA,IAAI,EAACH,eAAe,CAACI,gBADY;AAEjCC,EAAAA,OAAO,EAAEH;AAFwB,CAAH,CAA3B;AAKP,OAAO,MAAMI,iBAAiB,GAAG,OAAM;AACnCH,EAAAA,IAAI,EAAEH,eAAe,CAACO;AADa,CAAN,CAA1B,C,CAIP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAGA,OAAO,MAAMC,gBAAgB,GAAIC,gBAAD,KAAsB;AAClDN,EAAAA,IAAI,EAAEH,eAAe,CAACU,mBAD4B;AAElDL,EAAAA,OAAO,EAAGI;AAFwC,CAAtB,CAAzB,C,CAKP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAGA,OAAO,MAAME,aAAa,GAAIT,IAAD,KAAW;AACpCC,EAAAA,IAAI,EAAEH,eAAe,CAACY,eADc;AAEpCP,EAAAA,OAAO,EAAGH;AAF0B,CAAX,CAAtB;AAKP,OAAO,MAAMW,aAAa,GAAIC,KAAD,KAAW;AACpCX,EAAAA,IAAI,EAAEH,eAAe,CAACe,eADc;AAEpCV,EAAAA,OAAO,EAAES;AAF2B,CAAX,CAAtB;AAKP,OAAO,MAAME,gBAAgB,GAAG,OAAM;AAClCb,EAAAA,IAAI,EAAGH,eAAe,CAACiB;AADW,CAAN,CAAzB;AAIP,OAAO,MAAMC,YAAY,GAAE,OAAM;AAC7Bf,EAAAA,IAAI,EAAEH,eAAe,CAACmB;AADO,CAAN,CAApB;AAIP,OAAO,MAAMC,cAAc,GAAE,OAAM;AAC/BjB,EAAAA,IAAI,EAAEH,eAAe,CAACqB;AADS,CAAN,CAAtB;AAIP,OAAO,MAAMC,cAAc,GAAGR,KAAD,KAAW;AACpCX,EAAAA,IAAI,EAAEH,eAAe,CAACuB,gBADc;AAEpClB,EAAAA,OAAO,EAAES;AAF2B,CAAX,CAAtB;AAKP,OAAO,MAAMU,WAAW,GAAGC,eAAD,KAAoB;AAC1CtB,EAAAA,IAAI,EAAGH,eAAe,CAAC0B,aADmB;AAE1CrB,EAAAA,OAAO,EAAEoB;AAFiC,CAApB,CAAnB;AAKP,OAAO,MAAME,aAAa,GAAC,CAAC;AAACzB,EAAAA,IAAD;AAAO0B,EAAAA;AAAP,CAAD,MAA2B;AAClDzB,EAAAA,IAAI,EAAGH,eAAe,CAAC6B,eAD2B;AAElDxB,EAAAA,OAAO,EAAE;AAACH,IAAAA,IAAD;AAAO0B,IAAAA;AAAP;AAFyC,CAA3B,CAApB;AAKP,OAAO,MAAME,aAAa,GAAGhB,KAAD,KAAW;AACnCX,EAAAA,IAAI,EAAEH,eAAe,CAAC+B,eADa;AAEnC1B,EAAAA,OAAO,EAAES;AAF0B,CAAX,CAArB","sourcesContent":["import UserActionTypes from './UserTypes'\n\nexport const setCurrentUser = user=>({\n    type:UserActionTypes.SET_CURRENT_USER,\n    payload: user\n})\n\nexport const googleSignInStart = () =>({\n    type: UserActionTypes.GOOGLE_SIGN_IN_START,\n})\n\n// export const googleSignInSuccess = (user) => ({\n//     type: UserActionTypes.GOOGLE_SIGN_IN_SUCCESS,\n//     payload : user\n// }) \n\n// export const googleSignInFailure = (error) =>({\n//     type: UserActionTypes.GOOGLE_SIGN_IN_FAILURE,\n//     payload: error\n// })\n\n\nexport const emailSignInStart = (emailAndPassword) =>({\n    type: UserActionTypes.EMAIL_SIGN_IN_START,\n    payload : emailAndPassword\n})\n\n// export const emailSignInSuccess = (user) => ({\n//     type: UserActionTypes.EMAIL_SIGN_IN_SUCCESS,\n//     payload : user\n// })\n\n// export const emailSignInFailure = (error) =>({\n//     type: UserActionTypes.EMAIL_SIGN_IN_FAILURE,\n//     payload: error\n// })\n\n\nexport const signInSuccess = (user) => ({\n    type: UserActionTypes.SIGN_IN_SUCCESS,\n    payload : user\n}) \n\nexport const signInFailure = (error) =>({\n    type: UserActionTypes.SIGN_IN_FAILURE,\n    payload: error\n})\n\nexport const checkUserSession = () =>({\n    type : UserActionTypes.CHECK_USER_SESSION\n})\n\nexport const signOutStart =() =>({\n    type: UserActionTypes.SIGN_OUT_START\n})\n\nexport const signOutSuccess =() =>({\n    type: UserActionTypes.SIGN_OUT_SUCCESS\n})\n\nexport const signOutFailure =(error) =>({\n    type: UserActionTypes.SIGN_OUT_FAILURE,\n    payload: error\n}) \n\nexport const signUpStart =(userCredentials)=>({\n    type : UserActionTypes.SIGN_UP_START,\n    payload: userCredentials\n})\n\nexport const signUpSuccess=({user, additionalData})=>({\n    type : UserActionTypes.SIGN_UP_SUCCESS,\n    payload: {user, additionalData}\n})\n\nexport const signUpFailure =(error) =>({\n    type: UserActionTypes.SIGN_UP_FAILURE,\n    payload: error\n})"]},"metadata":{},"sourceType":"module"}