{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nodejs\\\\ecomm\\\\src\\\\components\\\\Sign-up\\\\SignUp.js\";\nimport React from 'react';\nimport './SignUp.scss';\nimport FormInput from '../Form-input/FormInput';\nimport CustomButton from '../Custom-button/CustomButton'; // import {auth , createUserProfileDocument} from '../../firebase/Firebase'\n\nimport { signUpStart } from '../../redux/user/UserAction';\nimport { connect } from 'react-redux';\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        signUpStart\n      } = this.props;\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n\n      if (password !== confirmPassword) {\n        alert(\"Password doesn't match\");\n        return;\n      }\n\n      signUpStart({\n        displayName,\n        email,\n        password\n      }); // try{ \n      //     const { user } = await auth.createUserWithEmailAndPassword(email,password);\n      //     await createUserProfileDocument(user,{displayName}); //we are using await because we want to wait till the proccedure is complete\n      //     //for creating the account and when account is created we want to set our state back to null\n      //     this.setState({\n      //         displayName:'',\n      //         email:'',\n      //         password:'',\n      //         confirmPassword:''\n      //     })//this will clear our from\n      // }\n      // catch(error){\n      //     console.error(error)\n      // }\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"SignUp with email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Nodejs/ecomm/src/components/Sign-up/SignUp.js"],"names":["React","FormInput","CustomButton","signUpStart","connect","SignUp","Component","constructor","handleSubmit","event","preventDefault","props","displayName","email","password","confirmPassword","state","alert","handleChange","name","value","target","setState","render","mapDispatchToProps","dispatch","userCredentials"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './SignUp.scss'\nimport FormInput from '../Form-input/FormInput'\nimport CustomButton from '../Custom-button/CustomButton'\n// import {auth , createUserProfileDocument} from '../../firebase/Firebase'\nimport { signUpStart } from '../../redux/user/UserAction'\nimport { connect } from 'react-redux'\n\nclass SignUp extends React.Component{\n    constructor(){\n        super()\n        this.state={\n            displayName:'',\n            email:'',\n            password:'',\n            confirmPassword:''\n\n        }\n    }\n\n    handleSubmit=async event=>{\n        event.preventDefault();\n        const { signUpStart } = this.props\n        const {displayName,email,password,confirmPassword}=this.state;\n        if(password !== confirmPassword){\n            alert(\"Password doesn't match\")\n            return;\n        }\n        signUpStart({ displayName, email, password })\n        // try{ \n        //     const { user } = await auth.createUserWithEmailAndPassword(email,password);\n        //     await createUserProfileDocument(user,{displayName}); //we are using await because we want to wait till the proccedure is complete\n        //     //for creating the account and when account is created we want to set our state back to null\n\n        //     this.setState({\n        //         displayName:'',\n        //         email:'',\n        //         password:'',\n        //         confirmPassword:''\n        //     })//this will clear our from\n        // }\n        // catch(error){\n        //     console.error(error)\n        // }\n    }\n\n    handleChange=(event)=>{\n        const {name,value}=event.target;\n        this.setState({[name]:value})\n\n    }\n\n    render(){\n        const {displayName,email,password,confirmPassword}=this.state;\n        return(\n            <div className='sign-up'>\n                <h2 className='title'>I do not have an account</h2>\n                <span>SignUp with email and password</span>\n                <form className='sign-up-form' onSubmit={this.handleSubmit}>\n                    <FormInput\n                      type=\"text\" name=\"displayName\" value={displayName} onChange={this.handleChange}\n                      label=\"Display Name\" required />\n                    <FormInput\n                      type='email' name=\"email\" value={email} onChange={this.handleChange}\n                      label=\"Email\" required />\n                    <FormInput\n                      type='password' name=\"password\" value={password} onChange={this.handleChange}\n                      label=\"Password\" required />\n                    <FormInput\n                      type='password' name=\"confirmPassword\" value={confirmPassword} onChange={this.handleChange}\n                      label=\"Confirm Password\" required />\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\n                    \n                </form>\n\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch =>({\n    signUpStart : userCredentials=>  dispatch(signUpStart(userCredentials))\n})\n\nexport default connect(null,mapDispatchToProps)(SignUp)"]},"metadata":{},"sourceType":"module"}