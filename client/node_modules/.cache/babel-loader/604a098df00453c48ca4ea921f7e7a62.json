{"ast":null,"code":"// import {createStore , applyMiddleware} from 'redux'\n// import logger from 'redux-logger'\n// import RootReducer from './RootReducer'\n// import { persistStore } from 'redux-persist'\n// const middlewares=[logger];\n// export const store=createStore(RootReducer,applyMiddleware(...middlewares))\n// export const persistor = persistStore(store)\n// export default {store , persistor};\nimport { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger'; // import thunk from 'redux-thunk'\n\nimport RootReducer from './RootReducer';\nimport createSagaMiddleware from 'redux-saga';\nimport { fetchCollectionsStart } from './shop/ShopSaga';\nconst sagaMiddleware = createSagaMiddleware(); // const middlewares = [logger];\n// const middlewares = [thunk];\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(RootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(fetchCollectionsStart); //inside run we pass each individual saga\n\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["C:/Nodejs/ecomm/src/redux/Store.js"],"names":["createStore","applyMiddleware","persistStore","logger","RootReducer","createSagaMiddleware","fetchCollectionsStart","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,qBAAT,QAAsC,iBAAtC;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C,C,CAEA;AACA;;AACA,MAAMG,WAAW,GAAE,CAACD,cAAD,CAAnB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACD;;AAED,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACI,WAAD,EAAcH,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBR,qBAAnB,E,CAA0C;;AAE1C,OAAO,MAAMS,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B","sourcesContent":["// import {createStore , applyMiddleware} from 'redux'\n// import logger from 'redux-logger'\n// import RootReducer from './RootReducer'\n// import { persistStore } from 'redux-persist'\n\n// const middlewares=[logger];\n// export const store=createStore(RootReducer,applyMiddleware(...middlewares))\n// export const persistor = persistStore(store)\n\n// export default {store , persistor};\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\n// import thunk from 'redux-thunk'\nimport RootReducer from './RootReducer'\nimport createSagaMiddleware from 'redux-saga'\nimport { fetchCollectionsStart } from './shop/ShopSaga'\n\nconst sagaMiddleware = createSagaMiddleware()\n\n// const middlewares = [logger];\n// const middlewares = [thunk];\nconst middlewares =[sagaMiddleware]\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(RootReducer, applyMiddleware(...middlewares));\n\nsagaMiddleware.run(fetchCollectionsStart) //inside run we pass each individual saga\n\nexport const persistor = persistStore(store);"]},"metadata":{},"sourceType":"module"}