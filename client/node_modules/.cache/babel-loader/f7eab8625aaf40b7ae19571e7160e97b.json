{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nodejs\\\\ecomm\\\\client\\\\src\\\\App.js\";\nimport React, { useEffect } from 'react';\nimport './App.scss';\nimport Homepage from './pages/Homepage/Homepage';\nimport Shop from './pages/shop/Shop';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport SignUpSignIn from './pages/SignUp-SignIn/SignUpSignIn'; //  import {auth , createUserProfileDocument , **addCollectionAndDocuments} from './firebase/Firebase'\n// import {auth , createUserProfileDocument} from './firebase/Firebase'\n\nimport { connect } from 'react-redux'; // import {setCurrentUser} from './redux/user/UserAction'\n\nimport { selectCurrentUser } from '../src/redux/user/UserSelector';\nimport { createStructuredSelector } from 'reselect';\nimport Checkout from '../src/pages/checkout/Checkout'; //  ** import {selectColletionsForPreview} from './redux/shop/ShopSelector'\n\nimport { checkUserSession } from './redux/user/UserAction';\n\nconst App = ({\n  checkUserSession,\n  currentUser\n}) => {\n  // unsubscribeFromAuth=null;\n  useEffect(() => {\n    checkUserSession();\n  }, [checkUserSession]);\n  /* componentDidMount() {\n   //   const { checkUserSession } = this.props;\n   //   checkUserSession()\n   //   // const {setCurrentUser, **collectionsArray}=this.props;\n   //   // const {setCurrentUser}=this.props;\n    //   // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n   //   //   if(userAuth){\n   //   //     const userRef = await createUserProfileDocument(userAuth);\n  \n    //   //     //ref. in lecture 91\n   //   //     userRef.onSnapshot(snapShot=>{\n   //   //       setCurrentUser ({\n   //   //           id: snapShot.id,\n   //   //           ...snapShot.data()\n   //   //         })\n   //   //       })\n   //   //       // console.log(snapShot.data()) \n   //   //   }\n   //   //   setCurrentUser(userAuth) ;\n   //     // ** addCollectionAndDocuments('collections', collectionsArray.map(({title, items})=> ({title, items})) )\n   //   // });\n   // } \n   \n   componentWillUnmount(){\n     this.unsubscribeFromAuth();\n   }*/\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Homepage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/shop\",\n    component: Shop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: Checkout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/signin\",\n    render: () => currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(SignUpSignIn, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser // ** collectionsArray : selectColletionsForPreview \n  // ** - We did all of this so we don't have to manually enter each collection and item into firebase\n\n}); // const mapStateToProps = ({ user , collections }) => ({\n//   currentUser: user.currentUser,\n//   collectionsArray : collections.collectionsArray\n// });\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n}); // const mapDispatchToProps= dispatch=>({\n//   setCurrentUser:user =>dispatch(setCurrentUser(user))\n// }) //** We removed this mapDispatchToProps as noe sagas is handling setting our current user on success */\n// export default connect(mapStateToProps,mapDispatchToProps)(App);\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Nodejs/ecomm/client/src/App.js"],"names":["React","useEffect","Homepage","Shop","Route","Switch","Redirect","Header","SignUpSignIn","connect","selectCurrentUser","createStructuredSelector","Checkout","checkUserSession","App","currentUser","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,YAAP;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAAQC,KAAR,EAAcC,MAAd,EAAqBC,QAArB,QAAoC,kBAApC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,YAAP,MAAyB,oCAAzB,C,CACA;AACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CACA;;AACA,SAASC,iBAAT,QAAkC,gCAAlC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,QAAP,MAAqB,gCAArB,C,CACA;;AACA,SAASC,gBAAT,QAAiC,yBAAjC;;AAEA,MAAMC,GAAG,GAAE,CAAC;AAAED,EAAAA,gBAAF;AAAqBE,EAAAA;AAArB,CAAD,KAAsC;AAG/C;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,gBAAgB;AACjB,GAFQ,EAEL,CAACA,gBAAD,CAFK,CAAT;AAID;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCG,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEX,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAEC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,eAGA,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,SAAS,EAAES,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,eAIA,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,SAAlB;AAA4B,IAAA,MAAM,EAAE,MAAIG,WAAW,gBAC7C,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD6C,gBAE7C,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,CAFF,CADF;AAcH,CAxDD;;AA0DA,MAAMC,eAAe,GAACL,wBAAwB,CAAE;AAC9CI,EAAAA,WAAW,EAAEL,iBADiC,CAE9C;AACA;;AAH8C,CAAF,CAA9C,C,CAMA;AACA;AACA;AACA;;AAEA,MAAMO,kBAAkB,GAAEC,QAAQ,KAAI;AACpCL,EAAAA,gBAAgB,EAAE,MAAMK,QAAQ,CAACL,gBAAgB,EAAjB;AADI,CAAJ,CAAlC,C,CAIA;AACA;AACA;AAEA;;;AACA,eAAeJ,OAAO,CAACO,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CH,GAA5C,CAAf","sourcesContent":["import React ,{useEffect} from 'react';\nimport './App.scss';\nimport Homepage from './pages/Homepage/Homepage'\nimport Shop from './pages/shop/Shop'\nimport {Route,Switch,Redirect} from 'react-router-dom'\nimport Header from './components/Header/Header'\nimport SignUpSignIn from './pages/SignUp-SignIn/SignUpSignIn'\n//  import {auth , createUserProfileDocument , **addCollectionAndDocuments} from './firebase/Firebase'\n// import {auth , createUserProfileDocument} from './firebase/Firebase'\nimport {connect} from 'react-redux'\n// import {setCurrentUser} from './redux/user/UserAction'\nimport { selectCurrentUser } from '../src/redux/user/UserSelector'\nimport { createStructuredSelector } from 'reselect'\nimport Checkout from '../src/pages/checkout/Checkout'\n//  ** import {selectColletionsForPreview} from './redux/shop/ShopSelector'\nimport { checkUserSession } from './redux/user/UserAction'\n\nconst App =({ checkUserSession , currentUser })=>{\n  \n\n  // unsubscribeFromAuth=null;\n\n  useEffect(() => {\n    checkUserSession()\n  } , [checkUserSession])\n\n /* componentDidMount() {\n  //   const { checkUserSession } = this.props;\n  //   checkUserSession()\n  //   // const {setCurrentUser, **collectionsArray}=this.props;\n  //   // const {setCurrentUser}=this.props;\n\n  //   // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n  //   //   if(userAuth){\n  //   //     const userRef = await createUserProfileDocument(userAuth);\n\n\n\n  //   //     //ref. in lecture 91\n  //   //     userRef.onSnapshot(snapShot=>{\n  //   //       setCurrentUser ({\n  //   //           id: snapShot.id,\n  //   //           ...snapShot.data()\n  //   //         })\n  //   //       })\n  //   //       // console.log(snapShot.data()) \n  //   //   }\n  //   //   setCurrentUser(userAuth) ;\n  //     // ** addCollectionAndDocuments('collections', collectionsArray.map(({title, items})=> ({title, items})) )\n  //   // });\n  // } \n  \n  componentWillUnmount(){\n    this.unsubscribeFromAuth();\n  }*/\n\n  \n\n\n    return (\n      <div>\n        <Header/>\n        <Switch>\n        <Route exact path='/' component={Homepage} />\n        <Route path='/shop' component={Shop} />\n        <Route exact path='/checkout' component={Checkout} />\n        <Route exact path='/signin' render={()=>currentUser\n           ? (<Redirect to='/' />) \n           :( <SignUpSignIn/>)} />\n        </Switch>\n        \n      </div>\n    ); \n}\n\nconst mapStateToProps=createStructuredSelector ({\n  currentUser: selectCurrentUser \n  // ** collectionsArray : selectColletionsForPreview \n  // ** - We did all of this so we don't have to manually enter each collection and item into firebase\n})\n\n// const mapStateToProps = ({ user , collections }) => ({\n//   currentUser: user.currentUser,\n//   collectionsArray : collections.collectionsArray\n// });\n\nconst mapDispatchToProps =dispatch =>({\n  checkUserSession: () => dispatch(checkUserSession())\n})\n\n// const mapDispatchToProps= dispatch=>({\n//   setCurrentUser:user =>dispatch(setCurrentUser(user))\n// }) //** We removed this mapDispatchToProps as noe sagas is handling setting our current user on success */\n\n// export default connect(mapStateToProps,mapDispatchToProps)(App);\nexport default connect(mapStateToProps,mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}