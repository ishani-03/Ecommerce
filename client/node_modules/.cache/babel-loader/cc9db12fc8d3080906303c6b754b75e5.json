{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyCeVD-MmzdWxuJyOVRAdUfkAfFmwqktYWc\",\n  authDomain: \"crown-db-f5972.firebaseapp.com\",\n  databaseURL: \"https://crown-db-f5972.firebaseio.com\",\n  projectId: \"crown-db-f5972\",\n  storageBucket: \"crown-db-f5972.appspot.com\",\n  messagingSenderId: \"371200856026\",\n  appId: \"1:371200856026:web:60e0dcbf4d61f933cabae3\",\n  measurementId: \"G-VS5YDCRDL2\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get(); // console.log(snapShot)\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"Error creating user:\", error.message);\n    }\n  }\n\n  return userRef; // console.log(firestore.doc('users/12s3fwfqf'))\n};\nfirebase.initializeApp(config); //To add shop data in the firebase back-end\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef); // console.log(objectsToAdd)\n\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc(obj.title);\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  console.log(transformedCollection);\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["C:/Nodejs/ecomm/src/firebase/Firebase.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","title","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst config=\n    {\n        apiKey: \"AIzaSyCeVD-MmzdWxuJyOVRAdUfkAfFmwqktYWc\",\n        authDomain: \"crown-db-f5972.firebaseapp.com\",\n        databaseURL: \"https://crown-db-f5972.firebaseio.com\",\n        projectId: \"crown-db-f5972\",\n        storageBucket: \"crown-db-f5972.appspot.com\",\n        messagingSenderId: \"371200856026\",\n        appId: \"1:371200856026:web:60e0dcbf4d61f933cabae3\",\n        measurementId: \"G-VS5YDCRDL2\"\n      };\n\nexport const createUserProfileDocument = async(userAuth,additionalData)=>{\n  if(!userAuth) return;\n\n\n  const userRef= firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get()\n  // console.log(snapShot)\n\n  if(!snapShot.exists){\n    const {displayName,email} = userAuth;\n    const createdAt = new Date();\n\n    try{\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      })\n    }\n    catch(error){\n      console.log(\"Error creating user:\" , error.message);\n    }\n  }\n  return userRef;\n  // console.log(firestore.doc('users/12s3fwfqf'))\n}\n\n\n\nfirebase.initializeApp(config)\n\n//To add shop data in the firebase back-end\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) =>{\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef)\n  // console.log(objectsToAdd)\n\n  const batch= firestore.batch();\n  objectsToAdd.forEach(obj  => {\n    const newDocRef = collectionRef.doc(obj.title);\n        batch.set(newDocRef, obj)\n  });\n  return await batch.commit()\n}\n\nexport const convertCollectionsSnapshotToMap = (collections) =>{\n  const transformedCollection = collections.docs.map(doc =>{\n    const { title, items} =doc.data();\n\n    return{\n      routeName: encodeURI(title.toLowerCase()),\n      id : doc.id,\n      title,\n      items\n    }\n  })\n  console.log(transformedCollection)\n\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection\n    return accumulator\n  }, {} )\n\n \n}\n\nexport const getCurrentUser = () =>{\n  return new Promise((resolve,reject) => {\n    const unsubscribe =auth.onAuthStateChanged(userAuth =>{\n      unsubscribe()\n      resolve(userAuth)\n    }, reject)\n  })\n}\n\nexport const auth= firebase.auth()\nexport const firestore= firebase.firestore()\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({prompt:'select_account'});\nexport const signInWithGoogle=()=>auth.signInWithPopup(googleProvider);\n\nexport default firebase;\n\n\n"]},"metadata":{},"sourceType":"module"}