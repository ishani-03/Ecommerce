{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nodejs\\\\ecomm\\\\src\\\\components\\\\Sign-in\\\\SignIn.js\";\nimport React from 'react';\nimport FormInput from '../Form-input/FormInput';\nimport CustomButton from '../Custom-button/CustomButton';\nimport './SignIn.scss';\nimport { auth, signInWithGoogle } from '../../firebase/Firebase';\nimport { googleSignInStart } from '../../redux/user/UserAction';\nimport { connect } from 'react-redux';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log(error);\n      }\n\n      this.setState({\n        emial: '',\n        password: ''\n      });\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      required: true,\n      handleChange: this.handleChange,\n      label: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      required: true,\n      handleChange: this.handleChange,\n      label: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }, \" Sign-In\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, \"Google Sign-In\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Nodejs/ecomm/src/components/Sign-in/SignIn.js"],"names":["React","FormInput","CustomButton","auth","signInWithGoogle","googleSignInStart","connect","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","log","emial","handleChange","value","name","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport FormInput from '../Form-input/FormInput'\nimport CustomButton from '../Custom-button/CustomButton'\nimport './SignIn.scss'\nimport {auth,signInWithGoogle} from '../../firebase/Firebase'\nimport { googleSignInStart} from '../../redux/user/UserAction'\nimport {connect } from 'react-redux'\n\n\nclass SignIn extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            email:'',\n            password:''\n        }\n    }\n\n    handleSubmit=async event=>{\n        event.preventDefault();\n        const {email,password}=this.state; \n        try{\n            await auth.signInWithEmailAndPassword(email,password);\n            this.setState({email:'',password:''})\n        }\n        catch(error){\n            console.log(error)\n        }\n        this.setState({emial:'', password:''})\n    }\n\n\n    handleChange=(event)=>{\n        const{value,name}=event.target;\n        this.setState({[name]:value})\n    }\n\n    render(){\n        const {googleSignInStart} = this.props\n        return(\n            <div className='sign-in'>\n                <h2>I already have an account</h2>\n                <span>Sign in with your email and password</span>\n\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput name=\"email\" type=\"email\" value={this.state.email} required\n                    handleChange={this.handleChange} label='email'></FormInput>\n                    <FormInput name=\"password\" type=\"password\" value={this.state.password} required\n                    handleChange={this.handleChange} label='password'></FormInput>\n                    <div className='buttons'>\n                    <CustomButton type='submit'> Sign-In</CustomButton>\n                    <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>Google Sign-In</CustomButton>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = dispatch =>({\n    googleSignInStart : () => dispatch(googleSignInStart())\n})\n\nexport default connect (null,mapDispatchToProps)(SignIn)\n"]},"metadata":{},"sourceType":"module"}