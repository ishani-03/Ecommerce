{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nodejs\\\\ecomm\\\\src\\\\components\\\\Sign-up\\\\SignUp.js\";\nimport React, { useState } from 'react';\nimport './SignUp.scss';\nimport FormInput from '../Form-input/FormInput';\nimport CustomButton from '../Custom-button/CustomButton'; // import {auth , createUserProfileDocument} from '../../firebase/Firebase'\n\nimport { signUpStart } from '../../redux/user/UserAction';\nimport { connect } from 'react-redux';\n\nconst SignUp = signUpStart => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = userCredentials;\n\n    if (password !== confirmPassword) {\n      alert(\"Password doesn't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    }); // try{ \n    //     const { user } = await auth.createUserWithEmailAndPassword(email,password);\n    //     await createUserProfileDocument(user,{displayName}); //we are using await because we want to wait till the proccedure is complete\n    //     //for creating the account and when account is created we want to set our state back to null\n    //     this.setState({\n    //         displayName:'',\n    //         email:'',\n    //         password:'',\n    //         confirmPassword:''\n    //     })//this will clear our from\n    // }\n    // catch(error){\n    //     console.error(error)\n    // }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"SignUp with email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Nodejs/ecomm/src/components/Sign-up/SignUp.js"],"names":["React","useState","FormInput","CustomButton","signUpStart","connect","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React , {useState} from 'react'\nimport './SignUp.scss'\nimport FormInput from '../Form-input/FormInput'\nimport CustomButton from '../Custom-button/CustomButton'\n// import {auth , createUserProfileDocument} from '../../firebase/Firebase'\nimport { signUpStart } from '../../redux/user/UserAction'\nimport { connect } from 'react-redux'\n\nconst SignUp =(signUpStart) =>{\n\n    const [userCredentials, setUserCredentials ] =useState ({displayName:'',\n    email:'',\n    password:'',\n    confirmPassword:''\n    })\n\n\n    const handleSubmit=async event=>{\n        event.preventDefault();\n        const {displayName,email,password,confirmPassword}= userCredentials;\n        if(password !== confirmPassword){\n            alert(\"Password doesn't match\")\n            return;\n        }\n        signUpStart({ displayName, email, password })\n        // try{ \n        //     const { user } = await auth.createUserWithEmailAndPassword(email,password);\n        //     await createUserProfileDocument(user,{displayName}); //we are using await because we want to wait till the proccedure is complete\n        //     //for creating the account and when account is created we want to set our state back to null\n\n        //     this.setState({\n        //         displayName:'',\n        //         email:'',\n        //         password:'',\n        //         confirmPassword:''\n        //     })//this will clear our from\n        // }\n        // catch(error){\n        //     console.error(error)\n        // }\n    }\n\n    const handleChange=(event)=>{\n        const {name,value}=event.target;\n        setUserCredentials({ ...userCredentials ,[name]:value})\n\n    }\n    \n        return(\n            <div className='sign-up'>\n                <h2 className='title'>I do not have an account</h2>\n                <span>SignUp with email and password</span>\n                <form className='sign-up-form' onSubmit={handleSubmit}>\n                    <FormInput\n                      type=\"text\" name=\"displayName\" value={displayName} onChange={handleChange}\n                      label=\"Display Name\" required />\n                    <FormInput\n                      type='email' name=\"email\" value={email} onChange={handleChange}\n                      label=\"Email\" required />\n                    <FormInput\n                      type='password' name=\"password\" value={password} onChange={handleChange}\n                      label=\"Password\" required />\n                    <FormInput\n                      type='password' name=\"confirmPassword\" value={confirmPassword} onChange={handleChange}\n                      label=\"Confirm Password\" required />\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\n                    \n                </form>\n\n            </div>\n        )\n    \n}\n\nconst mapDispatchToProps = dispatch =>({\n    signUpStart : userCredentials=>  dispatch(signUpStart(userCredentials))\n})\n\nexport default connect(null,mapDispatchToProps)(SignUp)"]},"metadata":{},"sourceType":"module"}